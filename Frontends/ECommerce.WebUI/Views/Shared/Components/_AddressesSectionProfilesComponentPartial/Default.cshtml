@model List<GetAddressDto>
<section class="addresses-section">
    <div class="section-header">
        <h2><i class="fas fa-map-marker-alt"></i> Adreslerim</h2>
        <button class="add-btn" id="addAddressBtn"><i class="fas fa-plus"></i> Yeni Adres Ekle</button>
    </div>
    <div class="addresses-grid" id="addressesContainer">
        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                <div class="address-card @(item.IsDefault ? "default" : "")" data-id="@item.AddressID">
                    <div class="address-card-header">
                        <div class="address-card-title">
                            @item.AddressTitle
                            @if (item.IsDefault)
                            {
                                <span class="default-badge">Varsayılan</span>
                            }
                        </div>
                    </div>
                    <div class="address-card-content">
                        <p>@item.NameSurname</p>
                        <p>@FormatPhone(item.PhoneNumber)</p>
                        <p>@item.District Mah., @item.AddressDetails, @item.Town/@item.City"</p>
                    </div>
                    <div class="address-card-actions">
                        <button class="address-card-btn edit-address-btn" data-id="@item.AddressID"> <i class="fas fa-edit"></i> Düzenle</button>
                        @if (!item.IsDefault)
                        {
                            <button class="address-card-btn set-default-address-btn"><i class="fas fa-check-circle"></i> Varsayılan Yap</button>
                        }
                        <button class="address-card-btn delete-address-btn delete" data-id="@item.AddressID"><i class="fas fa-trash-alt"></i> Sil</button>
                    </div>
                </div>
            }
        }
        else
        {
            <span style="color:red;">Kayıtlı Adresiniz Bulunmamaktadır.</span>
            <style>
                .addresses-grid {
                    display: grid;
                    grid-template-columns: none;
                    gap: 15px;
                    text-align: center;
                    justify-content: center;
                    font-weight: 500;
                }
            </style>
        }

    </div>
</section>

@{
    string FormatPhone(string phone)
    {
        if (string.IsNullOrEmpty(phone)) return phone;
        phone = phone.Replace("+90", "").Trim();
        if (phone.Length == 10)
        {
            return $"+90 {phone.Substring(0, 3)} {phone.Substring(3, 3)} {phone.Substring(6)}";
        }
        return $"+90 {phone}";
    }
}